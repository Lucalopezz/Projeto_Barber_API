generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id
  name                String
  email               String        @unique
  password            String
  role                Role
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  barberShopId        String?
  appointmentsTaken   Appointment[] @relation("BarberAppointments")
  appointmentsCreated Appointment[] @relation("ClientAppointments")
  ownedBarberShop     BarberShop?   @relation("Owner")
  barberShop          BarberShop?   @relation("Barbers", fields: [barberShopId], references: [id])
}

model BarberShop {
  id           String        @id
  name         String
  address      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  ownerId      String?       @unique
  appointments Appointment[]
  owner        User?         @relation("Owner", fields: [ownerId], references: [id])
  services     Service[]
  barbers      User[]        @relation("Barbers")
}

model Service {
  id           String        @id
  name         String
  price        Float
  duration     Int
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  barberShopId String
  appointments Appointment[]
  barberShop   BarberShop    @relation(fields: [barberShopId], references: [id], onDelete: Cascade)
}

model Appointment {
  id           String            @id
  date         DateTime
  status       AppointmentStatus @default(scheduled)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  clientId     String
  barberId     String
  serviceId    String
  barberShopId String
  barber       User              @relation("BarberAppointments", fields: [barberId], references: [id])
  barberShop   BarberShop        @relation(fields: [barberShopId], references: [id])
  client       User              @relation("ClientAppointments", fields: [clientId], references: [id])
  service      Service           @relation(fields: [serviceId], references: [id])
}

enum Role {
  barber
  client
}

enum AppointmentStatus {
  scheduled
  completed
  cancelled
}
